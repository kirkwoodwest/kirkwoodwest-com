{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-our-interdimensional-space","title":"Welcome to Our Interdimensional Space","text":"<p>Join us in the Squirrel World, our digital realm reflecting our unique creative spirit. As we craft this virtual world, we invite you to discover and evolve alongside us.</p>"},{"location":"#our-music","title":"Our Music","text":"<p>Check out our release catalog, mixes, and free music. Or Download or Stream our music from the following places, or wherever you get music. Bandcamp, Beatport, Juno Download, Youtube Music</p>"},{"location":"#music-services-training","title":"Music Services &amp; Training","text":"<p>I offer a bit of music services ranging from learning Bitwig, live performance setups, Bitwig Controller API, Mixing &amp; Mastering, UI/UX Design and Prototyping. For more information, visit services.</p>"},{"location":"#more","title":"More","text":"<p>Learn more about Kirkwood West. We are the party masters wearing fancy threads.</p>"},{"location":"#stay-tuned","title":"Stay Tuned","text":"<p>Keep an eye on my upcoming notes about working with the Bitwig API and delving into Hexler's Touch OSC MKII. We're thrilled to keep delivering fresh music. Stay in the loop for the latest from Kirkwood West.</p> <p>Ctrl+Alt+Del</p> <p>"},{"location":"about/","title":"About","text":""},{"location":"about/#me","title":"Me","text":"<p>Hello, I'm Kirkwood West. My journey in music and technology began in the 80s, a time marked by the emergence of groundbreaking electronic devices. Armed with a boombox, a Casio keyboard, a microphone, and an Atari 800, I embarked on a path that would shape my future. As a four year old, tools were my early teachers, guiding me through my first experiences in sound manipulation and digital creativity.</p> <p>From experimenting with the SK-1's sampling capabilities to exploring the basics of programming on the Atari 800, each experience deepened my understanding and passion for music and technology. My approach has always been about blending the familiar with the innovative, continually pushing boundaries to discover new possibilities in sound and digital art. I'm driven by a curiosity to explore the uncharted territories of audio and technology, always in pursuit of the next breakthrough in the ever-evolving landscape of music.</p> <p></p>"},{"location":"about/#the-label","title":"The Label","text":"<p>Kirkwood West isn't just a label; it\u2019s a dynamic journey into the depths of electronic music. What began as a personal mission to reconnect with my past has grown into a collaborative venture, involving a close-knit circle of friends and family. Together, we explore diverse musical landscapes, blending timeless influences with contemporary sounds.</p> <p>Our goal is to craft music that not only resonates with listeners today but also carries the potential to endure and inspire future generations. Kirkwood West serves as a bridge from our studio to the wider world, enabling us to share our creations far and wide. This label is our cosmic vessel, delivering our creations from the studio to the world, fostering connections that transcend the ordinary, reaching into the heart of the musical cosmos.</p> <p></p>"},{"location":"about/#squirrels-our-interdimensional-companions","title":"Squirrels: Our Interdimensional Companions","text":"<p>At the core of Kirkwood West is the spirit of the squirrel, our emblem and guide in this interdimensional journey. In the world of Kirkwood West, we embrace the squirrel's essence \u2013 agile, inventive, and persistently creative. Just as squirrels gather and build, we too collect diverse sonic elements and construct intricate soundscapes. They are our totem in the music realm, symbolizing our relentless pursuit of creativity and our ability to adapt and thrive in the ever-changing landscape of music. In the squirrel world, we find our kinship; it's a realm where our artistic visions take shape and where every creation is a part of this larger, interconnected ecosystem. Here, in our squirrel-inspired universe, we channel the energy and ingenuity of these spirited creatures, crafting and releasing music that is as dynamic and resourceful as our namesake.</p> <p></p> <p>I  SQUIRREL</p>"},{"location":"connect_complete/","title":"Thank You","text":"<p>Thanks for reaching out and connecting. I'm usually deep working and don't respond immediately to email. I check requests on average and once a week and try to respond to everyone that I can</p>"},{"location":"contact/","title":"Contact","text":"<p>Lets get in touch. Fill out some details. Send it over the magical www and you'll have a response shortly.</p> Name Email Message Submit"},{"location":"merch/","title":"Merch","text":"<p>SOLD OUT</p> <p>Sorry We are currently sold out of merch at the moment. We are working with distributers and makers to create more kirkwood west style merch. If you are one of these people please contact.</p>"},{"location":"merch/#send-me-to-space-2024","title":"Send Me To Space 2024","text":""},{"location":"merch/#sold-out","title":"SOLD OUT!","text":""},{"location":"music/","title":"Music","text":""},{"location":"music/#music","title":"Music","text":""},{"location":"music/#releases","title":"Releases","text":"<p>Catalog of Kirkwood West Releases</p> Catalog Artist Title BPM Date 002 TH3WORM Wake Up On Time 106 2023-10-28 001 RCS &amp; TH3WORM Digital Zone 101-110 2023-08-11"},{"location":"music/#th3worm-wake-up-on-time","title":"TH3WORM: Wake Up On Time","text":"Wake Up On Time by TH3WORM <p>A late night party fueled by hypnotic grooves and pulsing bass. Our minds sink deeper into the cosmic matrix. We enter an altered state of consciousness. The Third Eye expands. The Soul is transformed. We can never go back.</p> <p>TH3WORMs first solo release is quintessential Techno Boogie Fusion. An alchemy of minimal, dub, and post disco funk. The bass rolls and the chords echo drawing listeners into its depths. \"Wake Up on Time\" alongside \"Deep Dream\" showcase the next mutation of this formula. Through a blend of vintage hardware warmth and cutting-edge software precision, TH3WORM is digging a deep tunnel in the techno soundscape.</p> <ul> <li>Written &amp; Mixed by TH3WORM</li> <li>Mastered by Miro Pajic</li> </ul>"},{"location":"music/#rcs-and-th3worm-digital-zone","title":"RCS AND TH3WORM: Digital Zone","text":"Wake Up On Time by TH3WORM <p>An insidious force has overtaken global civilization. Digital technology has crept into every aspect of our lives. It constantly watches us, records us, and seeks to understand us. As we engage with it, the network begins to manipulate our thoughts and the way we move through this world. This process of digitalization has become so ubiquitous that it defines what it means to be human in 2023. We have entered the digital zone but will you be able to escape?</p> <p>RCS &amp; TH3WORM have been homies since the first grade. They grew up together in school, playing video games, riding skateboards, mixing records , writing tracks and throwing parties. It was destined to be that 30 years later they would come together on a collaboration.</p> <p>Music is essential to their lives as air is to most. They use an extensive collection of records, microphones, vintage analog gear &amp; modern recording systems. The two travel to each others studios time after time to compose and dial in the best gear for each sound layer. This is the process that they use for a sound that is undeniably dope.</p> <ul> <li>Written &amp; Mixed by TH3WORM &amp; RCS</li> <li>Mastered by Miro Pajic</li> </ul>"},{"location":"music/#mixes","title":"Mixes","text":"<p>Mixes and Podcasts by Kirkwood West</p> kirkwoodwest \u00b7 Kirkwood West - Live DJ Set At Luna 2012-06-20 kirkwoodwest \u00b7 Kirkwood West - Live DJ on WEFT Sessions Sept 2011"},{"location":"music/#remixes","title":"Remixes","text":""},{"location":"music/#free-music","title":"Free Music","text":"<p>Concept music created to explore the core sound of Kirkwood West</p> kirkwoodwest \u00b7 Music for you to download. &lt;3"},{"location":"parties/","title":"Parties","text":"<p>Squirrels really like to party. This is a collection of events we've done over the years.</p> <p> </p>"},{"location":"projects/","title":"Projects","text":"<p>These are the current projects going on here at kirkwood west.</p>"},{"location":"projects/#th3worm","title":"TH3WORM","text":""},{"location":"projects/#open-woods-bitwig-studio-extensions","title":"Open Woods - Bitwig Studio Extensions","text":""},{"location":"projects/#midi-controllers","title":"Midi Controllers","text":""},{"location":"services/","title":"Services","text":""},{"location":"services/#bitwig-training","title":"Bitwig Training","text":"<p> As a certified Bitwig Studio trainer, I offer comprehensive training tailored to your needs. Whether you're transitioning from another DAW or starting from scratch, I'll guide you through Bitwig's unique features and workflow, ensuring you gain a solid understanding and skill set to fully utilize this powerful software.</p>"},{"location":"services/#bitwig-live-rig-consulting","title":"Bitwig Live Rig Consulting","text":"<p>Looking to take your studio skills to the stage? I specialize in constructing live sets in Bitwig, covering a wide range of methods including live looping, clip launching, and various control setups (MIDI-based, hardware-based, or mixed). Let's collaborate to bring your live performance vision to life.</p>"},{"location":"services/#bitwig-controller-integration-automation","title":"Bitwig Controller Integration &amp; Automation","text":"<p>Enhance your Bitwig experience by customizing your controller integration to fit your workflow. Utilizing the Bitwig API, I can help you build any type of control connection you desire. Need advanced automation? From basic tasks like loading a VST to more complex presets, I've got you covered.</p>"},{"location":"services/#touch-osc","title":"Touch OSC","text":"<p>Dive into the world of Touch OSC with my guidance. Whether you're looking to grasp the basics or delve into more advanced aspects, I can assist you in building or designing your dream interface, ensuring it perfectly matches your specifications and enhances your creative process.</p>"},{"location":"services/#mixing-mastering","title":"Mixing &amp; Mastering","text":"<p>Offering professional mixing and mastering services, I focus on enhancing the sound quality of your music. Specializing in album and EP mastering, I ensure your tracks are balanced, clear, and ready for distribution. Whether it's a single track or a full album, each project is treated with the utmost care and precision to meet industry standards.</p>"},{"location":"services/#uiux-design","title":"UI/UX Design","text":"<p>With a keen eye for design and user experience, I offer UI/UX services tailored to your specific needs. This includes designing intuitive and visually appealing interfaces for websites, apps, and digital products, ensuring a seamless and engaging user experience.</p>"},{"location":"services/#get-connected","title":"Get Connected","text":"<p>Interested in exploring the world of Bitwig Studio, live performance setups, controller integration, or seeking professional mixing and mastering services? I'm here to help. Whether you have a specific project in mind or just starting out and need guidance, I'm ready to assist you in achieving your musical and technical goals.</p> <p>For any inquiries, collaborations, or to discuss your project, please don't hesitate to reach out. Click the link below to access my contact form, and I'll get back to you as soon as possible.</p> <p>contact me</p> <p>Stay connected and follow me on social media for updates, tips, and more insights into the world of music production and design.</p> <p>Bandcamp | Youtube | Instagram </p> <p>Looking forward to hearing from you and working together to bring your ideas to life!</p>"},{"location":"notes/","title":"Notes","text":"<p>These are some of my working notes and things I find of interest. This site was inspired by my friend and mentor Ronny Pries, the dark lord of the Vault community. Here you will find the deeper digital garden of things I'm working on or thinking about.</p>"},{"location":"notes/#touch-osc","title":"Touch OSC","text":"<p>I am a huge fan of touch for making custom interface for music. I made several references for things I found useful when working in the Touch OSC Editor. </p> <ul> <li>Touch OSC Stuff</li> </ul>"},{"location":"notes/#bitwig-api","title":"Bitwig API","text":"<p>Keeping the secrets of the bitwig api until open woods is released into the wild. </p> <ul> <li>Bitwig Extensions</li> </ul>"},{"location":"notes/bitwig-extensions/","title":"Bitwig Extensions","text":"<p>Still working on the Open Woods Project. For now check out the bitwig library of extensions. https://github.com/bitwig/bitwig-extensions</p>"},{"location":"notes/bitwig-extensions/#my-super-bank-class","title":"My Super Bank Class!","text":"Super Bank<pre><code>public class SuperBank {\n\n\n  private final HashMap&lt;CursorTrack, ArrayList&lt;BooleanValue&gt;&gt; cursor_track_equals_values;\n  private final ArrayList&lt;SuperBankDevices&gt; track_devices;\n  int NUM_TRACKS = 96;\n  int NUM_SCENES = 64;\n\n  TrackBank trackBank;\n\n\n  private ControllerHost host;\n\n  public SuperBank(ControllerHost host) {\n    this.host = host;\n    track_devices = new ArrayList&lt;SuperBankDevices&gt;();\n\n    trackBank = host.createTrackBank(NUM_TRACKS, 0, NUM_SCENES, true);\n    for (int i = 0; i &lt; NUM_TRACKS; i++) {\n      final int track_id = i;\n      Track     track    = trackBank.getItemAt(i);\n      track.arm().markInterested();\n      track.name().markInterested();\n      track.color().markInterested();\n      track.isActivated().markInterested();\n      track.isGroup().markInterested();\n      track.isGroupExpanded().markInterested();\n\n      track_devices.add(new SuperBankDevices(track));\n\n      //Always Select track when selecting a slot.\n      track.clipLauncherSlotBank().addIsSelectedObserver((slot_index, b) -&gt; slotBankIsSelectedUpdate(track_id, slot_index, b));\n    }\n\n    cursor_track_equals_values = new HashMap&lt;CursorTrack, ArrayList&lt;BooleanValue&gt;&gt;();\n    Signal fold = host.getDocumentState().getSignalSetting(\"Collapse\", \"Super Bank\", \"Collapse Super Bank\");\n    fold.addSignalObserver(() -&gt; expandTracks(false));\n    Signal unfold = host.getDocumentState().getSignalSetting(\"Expand\", \"Super Bank\", \"Expand Super Bank\");\n    unfold.addSignalObserver(() -&gt; expandTracks(true));\n  }\n\n\n  private void slotBankIsSelectedUpdate(int track_id, int slot_index, boolean b) {\n    //select a track when you select a slot.\n    if (b) {\n      Track            channel = trackBank.getItemAt(track_id);\n      ClipLauncherSlot d       = channel.clipLauncherSlotBank().getItemAt(slot_index);\n      channel.selectInEditor();\n    }\n  }\n\n  private void isSelectedUpdate(int track_id, boolean b) {\n    host.println(\"selected: \" + track_id + \" : \" + b);\n  }\n\n  public void createEqualsValues(CursorTrack cursor_track) {\n    ArrayList&lt;BooleanValue&gt; equals_values = new ArrayList&lt;&gt;();\n    for (int i = 0; i &lt; NUM_TRACKS; i++) {\n      BooleanValue equals_value = trackBank.getItemAt(i).createEqualsValue(cursor_track);\n      equals_value.markInterested();\n      equals_values.add(equals_value);\n    }\n    cursor_track_equals_values.put(cursor_track, equals_values);\n  }\n\n  public TrackBank get() {\n    return trackBank;\n  }\n\n  public List&lt;String&gt; getIndexedTrackNames() {\n    List&lt;String&gt; trackNames = new ArrayList&lt;&gt;();\n    boolean masterHit = false;\n    for (int i = 0; i &lt; NUM_TRACKS; i++) {\n      Track  track = trackBank.getItemAt(i);\n      String name  = track.name().get();\n      if(name == \"Master\") {\n        masterHit = true;\n      }\n      if(masterHit &amp;&amp; name.isEmpty()) {\n        break;\n      }\n      trackNames.add(name);\n    }\n    return trackNames;\n  };\n\n  public int getCursorIndex(CursorTrack cursor_track) {\n    ArrayList&lt;BooleanValue&gt; equals_values = cursor_track_equals_values.get(cursor_track);\n    int                     size          = equals_values.size();\n    for (int i = 0; i &lt; size; i++) {\n      boolean is_equals = equals_values.get(i).get();\n      if (is_equals) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  public Track getItemAt(int i) {\n    return trackBank.getItemAt(i);\n  }\n\n  public boolean cursorHasDrumPads(CursorTrack cursor_track) {\n    int index = getCursorIndex(cursor_track);\n    return track_devices.get(index).hasDrumPads();\n  }\n\n  public ArrayList&lt;Integer&gt; getCursorDrumPads(CursorTrack cursor_track) {\n    int index = getCursorIndex(cursor_track);\n    if (index != -1) {\n      return track_devices.get(index).getDrumPadNotes();\n    } else {\n      return new ArrayList&lt;&gt;();\n    }\n  }\n\n  public ArrayList&lt;Device&gt; getCursorTrackDevices(CursorTrack cursor_track) {\n    int index = getCursorIndex(cursor_track);\n    if (index != -1) {\n      return track_devices.get(index).getDevices();\n    } else {\n      return new ArrayList&lt;&gt;();\n    }\n  }\n\n  /**\n   * Sets expansion of all groups in bank until they are all set to target.\n   *\n   * */\n  public void expandTracks(boolean expanded) {\n    List&lt;Track&gt; tracks = new ArrayList&lt;&gt;();\n    for (int i = 0; i &lt; NUM_TRACKS; i++) {\n      Track track = trackBank.getItemAt(i);\n      if (trackBank.getItemAt(i).isGroup().get()) {\n        if(  track.isGroupExpanded().get() !=  expanded) {\n          track.isGroupExpanded().set(expanded);\n          host.scheduleTask(()-&gt;expandTracks(expanded), 50);\n          return;\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"notes/bitwig-extensions/code-example/","title":"Code example","text":""},{"location":"notes/bitwig-extensions/code-example/#bitwig-extensions-code","title":"Bitwig Extensions Code","text":"<p>Still working on the Open Woods Project. For now check out the bitwig library of extensions. https://github.com/bitwig/bitwig-extensions</p> <pre><code>public class SuperBank {\n\n\n  private final HashMap&lt;CursorTrack, ArrayList&lt;BooleanValue&gt;&gt; cursor_track_equals_values;\n  private final ArrayList&lt;SuperBankDevices&gt; track_devices;\n  int NUM_TRACKS = 96;\n  int NUM_SCENES = 64;\n\n  TrackBank trackBank;\n\n\n  private ControllerHost host;\n\n  public SuperBank(ControllerHost host) {\n    this.host = host;\n</code></pre>"},{"location":"notes/touch-osc/","title":"Touch OSC","text":"<p> Touch OSC MKII is the next evolution of Touch Based Controllers that works on multiple platforms with touch support. Since Lemur pretty much died in a dumpster fire of years of not being supported, Hexler came through with a great replacement that supports Lua Scripting! </p>"},{"location":"notes/touch-osc/#touch-osc-hexlernet","title":"Touch OSC @ Hexler.net","text":"<p>Find more information about Touch OSC</p>"},{"location":"notes/touch-osc/#things-you-can-do-with-touch-osc","title":"Things you can do with touch OSC","text":"<ul> <li>Build a Touch Interface with Midi Controller Integration</li> <li>Emulate another midi controller</li> <li>Make a game! Yes, its that powerful with the addition of Lua Scripting.</li> <li>Control or read from any OSC Enabled device</li> </ul> <p>I hope to elaborate on this page more. I want to provide snippets and a bunch of resources that will be useful for the to the Touch OSC community. For now check out some of my submissions to Patch Storage</p>"},{"location":"notes/touch-osc/#other-resources","title":"Other Resources","text":"<p>Felix and friends have made this incredible resource for learning Lua &amp; Local Messages in Touch OSC. https://github.com/F-l-i-x/TouchOSC</p> <p>Discord Server Generally while I'm working on Touch OSC Projects, I'll also hang out with crew and help answer questions in the Touch OSC Discord. Join in the fun. Remember to use <code>#threads!</code> https://discord.gg/t5u6NvcSxB</p>"},{"location":"notes/touch-osc/cheatsheet/","title":"Cheat Sheet","text":"","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#why-make-this","title":"Why make this?","text":"<p>In my quest to master Touch OSC MKII, I've ventured deep into the labyrinth of its manual, absorbing its complexities and nuances. The journey's been a bit like coding in an editor that's more demanding on human memory than I'm equipped with (think 32k). To navigate this, I crafted a custom reference guide \u2013 a two-fold solution. Not only did creating this guide serve as a deep dive into learning the intricacies of Touch OSC, but it also became an essential tool in my arsenal, especially since my forays into editing Touch OSC templates aren't a daily ritual.</p> <p>As I continue to sift through and organize my notes, expect this to evolve, breaking down even further. Picture Lua in every nook and cranny! The journey into the world of Touch OSC is ongoing, and I\u2019m excited to share the insights and tricks I've gathered along the way. Lua everywhere! </p>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#reference","title":"Reference","text":"<ul> <li>Touch OSC Enumerations</li> </ul>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#snippets","title":"Snippets","text":"<ul> <li>My personal library of useful Lua Snippets.</li> </ul>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#per-frame-updates","title":"Per Frame Updates","text":"Update Callback<pre><code>function update()\n  print(self.name, 'update') \nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#values","title":"Values","text":"","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#value-changed","title":"Value Changed","text":"SnippetDebug <pre><code>function onValueChanged(key)\n  if (key == \"x\") then\n\n  end\n  if (key == \"touch\") then\n\n  end\n  if (key == \"x\" and self.values.touch) then\n\n  end\nend\n</code></pre> <pre><code>function onValueChanged(key)\n  print(key, self.values[key])\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#value-set","title":"Value Set","text":"Snippet <pre><code>self.parent.values.x = 1\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#notify","title":"Notify","text":"","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#notify-receive","title":"Notify Receive","text":"SnippetDebug <pre><code>function onReceiveNotify(key, value)\n  if key == \"\" then\n\n  end\nend\n</code></pre> <pre><code>function onReceiveNotify(key, value)\n  print(self.name, 'onReceiveNotify')\n  print('\\t key   =', key)\n  print('\\t value =', value)\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#notify-send","title":"Notify Send","text":"SnippetSnippet 2 <pre><code>self.parent:notify(\"update\", 1)\n</code></pre> <pre><code>self.parent:notify(\"update\", {obj=self, value=1})\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#osc","title":"OSC","text":"","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#osc-receive","title":"OSC Receive","text":"SnippetSnippet 2Debug OSC Callback - Single Value<pre><code>function onReceiveOSC(message, connections)\n  local path = message[1]\n  local arguments = message[2]\n  if path==\"/\" then\n    local v = arguments[1].value\n\n  end\nend\n</code></pre> OSC Callback - Loop Values<pre><code>function onReceiveOSC(message, connections)\n  local path = message[1]\n  local arguments = message[2]\n  if path==\"/\" then\n    for i=1,#arguments do\n      local tag = arguments[i].tag\n      local v = arguments[i].value\n    end\n  end\nend\n</code></pre> <pre><code>function onReceiveOSC(message, connections)\n  print(self.name, 'onReceiveOSC')\n  local path = message[1]\n  local arguments = message[2]\n  print('\\t path        =', path)\n  for i=1,#arguments do\n    print('\\t argument    =', arguments[i].tag, arguments[i].value)\n  end\n  print('\\t connections =', table.unpack(connections))\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#osc-send","title":"OSC Send","text":"SnippetSnippet 2 Simple Message<pre><code>-- -----------------------------------------\n-- Send simple OSC messages\n--\n-- arguments are auto-converted to\n-- boolean, float or string (not integer!)\n-- -----------------------------------------\n\n-- send on all configured connections (1-5)\nsendOSC('/simple')\nsendOSC('/ping', 'pong')\nsendOSC('/on', true)\nsendOSC('/1/fader1', 0.5)\nsendOSC('/3/xy1', 0.25, 0.75)\nsendOSC('/mixedarguments', 'Hello', 1, true, 'World')\n\n-- send only on connections 1 and 2\nsendOSC('/1/fader1', 0.5, { true, true })\n\n-- send only on connections 1 and 3\nsendOSC('/3/xy1', 0.25, 0.75, { true, false, true })\n\n-- send only on connections 1 and 5\nsendOSC('/mixedarguments', 'Hello', 1, true, 'World', { true, false, false, false, true })\n</code></pre> Complex Message<pre><code>-- -----------------------------------------\n-- Send complex OSC messages\n-- with argument type tags\n-- -----------------------------------------\n\nsendOSC(\n  -- message\n  {\n    -- path\n    '/complex',\n\n    -- argument list\n    {\n      { tag = 'T' },                                     -- true\n      { tag = 'F' },                                     -- false\n      { tag = 'N' },                                     -- nil\n      { tag = 'I' },                                     -- infinitum\n      { tag = 'i', value = 42 },                         -- int32\n      { tag = 'f', value = 3.14 },                       -- float32\n      { tag = 's', value = 'Goodbye Cruel World' },      -- string\n      { tag = 'b', value = { 0xC0, 0x00, 0x10, 0xFF } }  -- blob\n    }\n  },\n  -- connections\n  {\n    true, -- 1\n    true, -- 2\n    true, -- 3\n    true, -- 4\n    true  -- 5\n  }\n)\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#midi","title":"Midi","text":"MIDI Callback<pre><code>function onReceiveMIDI(message, connections)\n  print(self.name, 'onReceiveMIDI')\n  print('\\t message     =', table.unpack(message))\n  print('\\t connections =', table.unpack(connections))\nend\n</code></pre> Sending Midi<pre><code>-- control change, controller 0, channel 1\n-- all configured connections (1-5)\nsendMIDI({ 176, 0, 102 })\nsendMIDI({ MIDIMessageType.CONTROLCHANGE, 0, 102 })\n\n-- control change, controller 0, channel 2\n-- all configured connections (1-5)\nsendMIDI({ 177, 0, 103 })\nsendMIDI({ MIDIMessageType.CONTROLCHANGE + 1, 0, 103 })\n\n-- control change, controller 2, channel 6\n-- all configured connections (1-5)\nsendMIDI({ 181, 2, 104 })\nsendMIDI({ MIDIMessageType.CONTROLCHANGE + 5, 2, 104 })\n\n-- send only on connections 1 and 2\nsendMIDI({ MIDIMessageType.NOTE_ON, 12, 88 }, { true, true })\nsendMIDI({ MIDIMessageType.NOTE_OFF, 12, 0 }, { true, true })\n\n-- send only on connections 1 and 3\nsendMIDI({ MIDIMessageType.NOTE_ON, 13, 88 }, { true, false, true })\nsendMIDI({ MIDIMessageType.NOTE_OFF, 13, 0 }, { true, false, true })\n\n-- send only on connections 1 and 5\nsendMIDI({ MIDIMessageType.NOTE_ON, 14, 88 }, { true, false, false, false, true })\nsendMIDI({ MIDIMessageType.NOTE_OFF, 14, 0 }, { true, false, false, false, true })\n\n-- send system exlusive\nsendMIDI({ 0xF0, 0x00, 0x01, 0xF7 })\nsendMIDI({ MIDIMessageType.SYSTEMEXCLUSIVE, 0x00, 0x0D, 0xF7 })\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#color","title":"Color","text":"<pre><code>color.r\ncolor.g\ncolor.b\ncolor.a \n\nColor()                               -- [1]\nColor(color)                          -- [2]\nColor(number)                         -- [3]\nColor(number, number)                 -- [4]\nColor(number, number, number)         -- [5]\nColor(number, number, number, number) -- [6]\n\nColor.toHexString(color)\nColor.fromHexString(string)\n\n-- multiplication\ncolor * color\ncolor * number\n\n-- division\ncolor / color\ncolor / number\n\n-- addition\ncolor + color\ncolor + number\n\n-- subtraction\ncolor - color\ncolor - number\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/cheatsheet/#functions","title":"Functions","text":"<pre><code>rectangle:contains(number, number)\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-enumerations/","title":"Touch OSC Enumerations","text":"","tags":["touchosc"]},{"location":"notes/touch-osc/lua-enumerations/#enumerations","title":"Enumerations","text":"AlignH <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>textAlignH</code>\u00a0property.   <pre><code>AlignH.LEFT\nAlignH.CENTER\nAlignH.RIGHT\n</code></pre></p> AlignV <pre><code>AlignV.TOP\nAlignV.MIDDLE\nAlignV.BOTTOM\n</code></pre> ButtonType <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>buttonType</code>\u00a0property.</p> <pre><code>ButtonType.MOMENTARY\nButtonType.TOGGLE_RELEASE\nButtonType.TOGGLE_PRESS\n</code></pre> ControlType <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>type</code>\u00a0field.</p> <pre><code>ControlType.BOX\nControlType.BUTTON\nControlType.LABEL\nControlType.TEXT\nControlType.FADER\nControlType.XY\nControlType.RADIAL\nControlType.ENCODER\nControlType.RADAR\nControlType.RADIO\nControlType.GROUP\nControlType.PAGER\nControlType.GRID\n</code></pre> CursorDisplay <pre><code>CursorDisplay.ALWAYS\nCursorDisplay.ACTIVE\nCursorDisplay.INACTIVE\n</code></pre> Font <p>since 1.0.4.106   Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>font</code>\u00a0property.</p> <pre><code>Font.DEFAULT\nFont.MONOSPACED\n</code></pre> GamepadInput <p>since 1.1.0.132</p> <pre><code>GamepadInput.STICK_LEFT_X\nGamepadInput.STICK_LEFT_Y\nGamepadInput.STICK_RIGHT_X\nGamepadInput.STICK_RIGHT_Y\nGamepadInput.TRIGGER_LEFT\nGamepadInput.TRIGGER_RIGHT\nGamepadInput.BUTTON_UP\nGamepadInput.BUTTON_DOWN\nGamepadInput.BUTTON_LEFT\nGamepadInput.BUTTON_RIGHT\nGamepadInput.BUTTON_A\nGamepadInput.BUTTON_B\nGamepadInput.BUTTON_X\nGamepadInput.BUTTON_Y\nGamepadInput.BUTTON_STICK_LEFT\nGamepadInput.BUTTON_STICK_RIGHT\nGamepadInput.BUMPER_LEFT\nGamepadInput.BUMPER_RIGHT\nGamepadInput.BUTTON_START\nGamepadInput.BUTTON_SELECT\nGamepadInput.BUTTON_HOME\n</code></pre> MIDIMessageType <pre><code>MIDIMessageType.NOTE_OFF\nMIDIMessageType.NOTE_ON\nMIDIMessageType.POLYPRESSURE\nMIDIMessageType.CONTROLCHANGE\nMIDIMessageType.PROGRAMCHANGE\nMIDIMessageType.CHANNELPRESSURE\nMIDIMessageType.PITCHBEND\nMIDIMessageType.SYSTEMEXCLUSIVE\nMIDIMessageType.QUARTERFRAME\nMIDIMessageType.SONGPOSITION\nMIDIMessageType.SONGSELECT\nMIDIMessageType.CLOCK\nMIDIMessageType.START\nMIDIMessageType.CONTINUE\nMIDIMessageType.STOP\nMIDIMessageType.ACTIVESENSING\nMIDIMessageType.SYSTEMRESET\n</code></pre> Orientation <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>orientation</code>\u00a0property.</p> <pre><code>Orientation.NORTH\nOrientation.EAST\nOrientation.SOUTH\nOrientation.WEST\n</code></pre> OutlineStyle <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>outlineStyle</code>\u00a0property.</p> <pre><code>OutlineStyle.FULL\nOutlineStyle.CORNERS\nOutlineStyle.EDGES\n</code></pre> PointerPriority <pre><code>PointerPriority.OLDEST\nPointerPriority.NEWEST\n</code></pre> PointerState <pre><code>PointerState \nPointerState.BEGIN\nPointerState.ACTIVE\nPointerState.MOVE\nPointerState.END\n</code></pre> RadioType <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>radioType</code>\u00a0property.</p> <pre><code>RadioType.SELECT\nRadioType.METER\n</code></pre> Response <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>response</code>\u00a0property.</p> <pre><code>Response.ABSOLUTE\nResponse.RELATIVE\n</code></pre> Shape <p>Possible values for a\u00a0<code>Control</code>\u00a0object's\u00a0<code>shape</code>\u00a0property.</p> <pre><code>Shape.RECTANGLE\nShape.CIRCLE\nShape.TRIANGLE\nShape.DIAMOND\nShape.PENTAGON\nShape.HEXAGON\n</code></pre> ValueField <pre><code>ValueField.CURRENT\nValueField.LAST\nValueField.DEFAULT\n</code></pre> ValueProperty <pre><code>ValueProperty.TYPE\nValueProperty.LOCKED\nValueProperty.LOCKED_DEFAULT_CURRENT\nValueProperty.DEFAULT_PULL\n</code></pre> ValueType <pre><code>ValueType.BOOLEAN\nValueType.INTEGER\nValueType.FLOAT\nValueType.STRING\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/","title":"Lua Functions","text":"","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/#lua-reference-manual","title":"Lua Reference Manual","text":"<p>https://www.lua.org/manual/5.4/</p>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/#base","title":"base","text":"<pre><code>error\nipairs\nnext\npairs\nprint\nselect\ntonumber\ntostring\nunpack\ntype\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/#table","title":"table","text":"<p>All standard Lua table library functions are available plus the following additions:</p> <pre><code>table.pack(...)\n</code></pre> <p>Returns a new sequential table created from the elements provided.</p> <pre><code>table.unpack(...)\n</code></pre> <p>Same as the Lua base library function <code>unpack</code>.</p>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/#math","title":"math","text":"<p>All standard Lua math library functions are available plus the following additions:</p> <pre><code>math.clamp(number, number, number)\n</code></pre> <p>Returns <code>min(max(x, minVal), maxVal)</code> where <code>x</code> is the first parameter and <code>minVal</code> and <code>maxVal</code> the second and third parameters.</p>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/#string","title":"string","text":"<p>All standard Lua string library functions are available.</p>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-functions/#bit32","title":"bit32","text":"<p>since 1.1.7.154</p> <p>Support for bitwise operations has been backported from Lua 5.2. All functions are available inside the table <code>bit32</code>.</p> <pre><code>Rectangle()                               -- [1]\nRectangle(rectangle)                      -- [2]\nRectangle(number, number)                 -- [3]\nRectangle(number, number, number, number) -- [4]\n</code></pre> <p>Returns a new rectangle with</p> <ol> <li>position and size set to <code>(0,0)</code>.</li> <li>position and size copied from another <code>Rectangle</code> object.</li> <li>position set to (0,0) and size set to the two numbers.</li> <li>position set to the first pair of numbers and size set to the second two numbers.</li> </ol>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/","title":"Snippets","text":"<p>A collection of my code snippets for Touch OSC.</p>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#debugging","title":"Debugging","text":"Debug Frame <pre><code>function debugFrame(obj)\n  print(obj.name .. ' ( ' .. obj.frame.x .. ', ' .. obj.frame.y .. ', ' .. obj.frame.w .. ', ' .. obj.frame.h .. ')')\nend\n</code></pre> Debug Lua Table <pre><code>function debugTableInternal(tableName, table)\n  local s = \"TABLE: \" .. tableName .. \" {\" \n  for k, v in pairs(table) do\n    if(type(v) == \"table\") then\n      local sDeep = debugTable(tostring(k), v)\n      if (sDeep ~= nil) then\n        s = s .. sDeep \n      end\n\n    end\n    s = s .. k .. \": \" .. tostring(v) .. \", \"\n  end\n  s = string.sub(s, 1, -3)\n  s = s .. \"}\"\n  return s\nend\nfunction debugTable(tableName, table)\n  print(debugTableInternal(tableName, table))\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#events","title":"Events","text":"OnReceiveOSC SnippetSnippet 2Debug OSC Callback - Single Value<pre><code>function onReceiveOSC(message, connections)\n  local path = message[1]\n  local arguments = message[2]\n  if path==\"/\" then\n    local v = arguments[1].value\n\n  end\nend\n</code></pre> OSC Callback - Loop Values<pre><code>function onReceiveOSC(message, connections)\n  local path = message[1]\n  local arguments = message[2]\n  if path==\"/\" then\n    for i=1,#arguments do\n      local tag = arguments[i].tag\n      local v = arguments[i].value\n    end\n  end\nend\n</code></pre> <pre><code>function onReceiveOSC(message, connections)\n  print(self.name, 'onReceiveOSC')\n  local path = message[1]\n  local arguments = message[2]\n  print('\\t path        =', path)\n  for i=1,#arguments do\n    print('\\t argument    =', arguments[i].tag, arguments[i].value)\n  end\n  print('\\t connections =', table.unpack(connections))\nend\n</code></pre> onValueChanged Is TouchedX and Touch Active <pre><code>function onValueChanged(key)\n  if key == \"touch\" and self.values.touch then\n\n  end\nend\n</code></pre> <pre><code>function onValueChanged(key)\n  if key == \"x\" and self.values.touch then\n\n  end\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#math","title":"Math","text":"Map: Remap a value to a different range <pre><code>function map(value, oldMin, oldMax, newMin, newMax)\n  return (((value - oldMin) * (newMax - newMin)) / (oldMax - oldMin)) + newMin\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#tables","title":"Tables","text":"Deep Table Clear <pre><code>function deepClear(t)\n  for k, v in pairs(t) do\n    if type(v) == \"table\" then\n      deepClear(v)\n    end\n    t[k] = nil\n  end\nend\n\n-- Example usage:\nmyTable = {\n  a = {\n    b = {\n      c = \"value\"\n    }\n  },\n  d = \"another value\"\n}\n\ndeepClear(myTable)\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#finding-objects","title":"Finding Objects","text":"All Object Based On Tag <pre><code>local t = self.parent:findAllByProperty('tag', '3/6', true)\nprint(#t)\nfor i=1, #t do\n  print(t[i].name)\n  print(t[i].parent.name)\nend\n</code></pre> Find All Objects Based on Tag With Full Path <pre><code>local objs = root:findAllByProperty(\"tag\", \"3/5\", true)\n-- print all object names and their path to root\nfor i, obj in ipairs(objs) do\n  print(obj.name .. \" \" .. getPathToRoot(obj))\nend\n\nfunction getPathToRoot(obj)\n  local path = obj.name\n  local parent = obj.parent\n  while parent ~= nil do\n    path = parent.name .. \"/\" .. path\n    parent = parent.parent\n  end\n  return path\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#timers","title":"Timers","text":"Control Double-tap <pre><code>local delay = 300\nlocal last = 0\n\nfunction onValueChanged()\n  if(not self.values.touch) then\n    local now = getMillis()\n    if(now - last &lt; delay) then\n      print('double tap!')\n      last = 0\n    else\n      last = now\n    end\n  end\nend\n</code></pre> Send Periodic Message <pre><code>local delay = 1000 -- every 1000ms = 1s\nlocal last = 0\n\nfunction update()\n  local now = getMillis()\n  if(now - last &gt; delay) then\n    last = now\n    sendOSC('/ping')\n  end\nend\n</code></pre>","tags":["touchosc"]},{"location":"notes/touch-osc/lua-snippets/#accelerometer","title":"Accelerometer","text":"Get accelerometer Data <pre><code>if(hasAccelerometer()) then\n  update = function()\n    local values = getAccelerometer()\n    sendOSC('/accxyz', table.unpack(values))\n  end\nend\n</code></pre>","tags":["touchosc"]}]}